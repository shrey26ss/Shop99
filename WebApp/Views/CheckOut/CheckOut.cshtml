@model bool
@{
    Layout = "_layout";

}

<style>
    .contact-page .theme-form {
        padding: 20px;
        background-color: #f1f4f7;
        border: 0px solid #ffffff;
        margin-bottom: 20px;
    }

    .box {
        background-color: #fff;
        border-radius: 8px;
        border: 2px solid #e9ebef;
        padding: 20px;
        margin-bottom: 20px;
    }

    .box-title {
        margin-bottom: 10px;
        text-transform: uppercase;
        font-size: 16px;
        font-weight: 700;
        color: #094bde;
        letter-spacing: 2px;
    }

    .plan-selection {
        border-bottom: 2px solid #e9ebef;
        padding-bottom: 25px;
        margin-bottom: 35px;
    }

        .plan-selection:last-child {
            border-bottom: 0px;
            margin-bottom: 0px;
            padding-bottom: 0px;
        }

    .plan-data {
        position: relative;
    }

        .plan-data label {
            font-size: 20px;
            margin-bottom: 15px;
            font-weight: 400;
        }

    .plan-text {
        padding-left: 15px;
    }

    .plan-price {
        position: absolute;
        right: 0px;
        color: #094bde;
        font-size: 20px;
        font-weight: 700;
        top: 0;
    }

    /*
                                            * SVG Icons
                                            **********************************************************/
    .svg {
        display: block;
        position: absolute;
        top: 2px;
        right: 15px;
        width: 45px;
        height: 45px;
    }

    /*
                                            * Buttons
                                            **********************************************************/
    .button {
        position: relative;
        height: 50px;
        padding: 10px 20px;
        font-size: 14px;
        line-height: 48px;
        border-bottom: 1px solid #bbb;
        background: #fafafa;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .contact-page .theme-form input {
        padding: 8px 20px;
        margin-bottom: 0px;
    }

    .button:hover {
        background: #f5f5f5;
    }


    .button img {
        width: 30px;
        height: 30px;
    }
    
    @@media all and (min-width: 500px) {
        .svg {
            right: 25px;
            width: 55px;
            height: 55px;
        }

        .button {
            height: 60px;
            padding: 10px 20px;
            font-size: 16px;
            line-height: 58px;
        }

            .button img {
                width: 40px;
                height: 40px;
            }
        /*.button:after {
                                    top: 20px;
                                    left: 23px;
                                }*/
    }
    /*
                                            * Breakpoint
                                            **********************************************************/
    @@media all and (min-width: 700px) {
        .svg {
            top: auto !important;
            right: 0 !important;
            left: 0;
            margin: auto;
            bottom: 10px;
            width: 60px;
            height: 60px;
        }



        .payments {
            max-width: 700px;
            margin: 0 auto;
            padding: 0px;
            overflow: hidden;
            display: flex;
        }

        .button {
            width: 150px;
            height: 150px;
            margin-right: 10px;
            padding: 20px 0;
            font-size: 18px;
            line-height: 1;
            text-align: center;
            border: 0;
            border-radius: 3px;
            box-shadow: inset 0 0 0 1px #bbb;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            align-items: center;
        }

            .button img {
                width: 60px;
                height: 60px;
            }

            .button:last-child {
                margin-right: 0;
            }
        /*.button:after {
                                    top: 15px;
                                    left: 55px;
                                }*/
    }

    

</style>

<!-- section start -->
<section class="section-big-py-space b-g-light pt-4">
    <div class="custom-container">
        <div class="checkout-page contact-page">
            <div class="checkout-form" id="checkoutSection">
                <div class="row">
                    <div class="col-lg-6 col-sm-12 col-xs-12" id="dbAddress">
                    </div>
                    <div class="col-lg-6 col-sm-12 col-xs-12" id="dvPlaceOrderDetails">
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section scripts{
    <script>
        window.addEventListener("storage", e => {

            var result = $.parseJSON(event.newValue);

            if (result.hasOwnProperty("origin")) {
                if (result.origin === 'addMoney') {
                    /* note : In Case of CashFree status :  1 - Pending , 2 - Success , 3- Failed  */
                    let cashFreePendings = ['', '0', '1', 'pending'];
                    let isPending = cashFreePendings.includes(result.status?.toString().toLowerCase());
                    let iconSrc = `/Image/iconMsg/${isPending ? '10' : (result.status == 2 ? '1' : '11')}.png`;
                    let h3Class = `${isPending ? 'text-info' : (result.status == 2 ? 'text-success' : 'text-danger')}`;
                    let statusText = `${isPending ? 'Transaction Pending' : (result.status == 2 ? 'Transaction Successful' : 'Transaction Failed')}`;
                    if (result.gateway === 'CashFree' && isPending) {
                        let _html = `<div id="divStatusResult"><div class="text-center"><span class="h4">Waiting....</span></div>
                                      <div class="text-center mt-5 mb-4">
                                      <div class="mt-5 mb-5"><span class="text-success h1" id="JsTimer">02:00</span> mins</div>
                                      <div>Do not press the back button untill the payment is complete</div>
                                      <button class="btn btn-outline-primary w-75 mt-4" id="mdlCancel">Close</button>
                                  </div></div>`;
                        mdlA.id = "callBackAlert";
                        mdlA.title = "Status";
                        mdlA.content = _html;
                        mdlA.modal(mdlA.size.large);
                        $('#mdlCancel').click(() => mdlA.dispose());
                        /* Cashfree Status check*/
                        function CheckCashFreeStatus(TID, t, showJsTimer, onStopTimer) {
                            $.post("/PGCallback/CashFreeStatusCheck", { TID }, function (result) {
                                isPending = cashFreePendings.includes(result.status?.toString().toLowerCase());
                                iconSrc = `${$$host}/Image/iconMsg/${isPending ? '10' : (result.status == 2 ? '1' : '11')}.png`;
                                h3Class = `${isPending ? 'text-info' : (result.status == 2 ? 'text-success' : 'text-danger')}`;
                                statusText = `${isPending ? 'Transaction Pending' : (result.status == 2 ? 'Transaction Successful' : 'Transaction Failed')}`;
                                if (isPending && t < 7) {
                                    setTimeout(function () {
                                        t = t + 1;
                                        CheckCashFreeStatus(TID, t, showJsTimer, onStopTimer);
                                    }, 10 * 1000);
                                } else {
                                    let _result = `<div class="row">
                                               <div class="col-sm-12 text-center">
                                                   <img src="${iconSrc}" />
                                                   <h3 class="${h3Class}">${statusText}</h3></div>
                                               <div class="col-sm-3"></div><div class="col-sm-3">Amount</div><div class="col-sm-6">${result.amount}</div>
                                               <div class="col-sm-3"></div><div class="col-sm-3">Transaction Id</div><div class="col-sm-6">${result.transactionID}</div>
                                               <div class="col-sm-3"></div><div class="col-sm-3">TID</div><div class="col-sm-6">${result.tid}</div>
                                             </div>`;
                                    $('#divStatusResult').html(_result);
                                    if (showJsTimer != undefined)
                                        showJsTimer.stopTimer();
                                }
                            }).catch(function (er) {
                                console.log(er);
                            }).fail(function (xhr) {
                                an.title = 'Oops';
                                an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                an.alert(an.type.failed);
                            });
                        }
                        /* End Cashfree Status check*/

                        let showJsTimer = new ShowJsTimer(JsTimer, 2);
                        showJsTimer.startTimer();
                        setTimeout(function () {
                            CheckCashFreeStatus(result.TID, 0, showJsTimer, function () {
                                mdlA.dispose();
                            });
                        }, 6000);
                    }
                    else {
                        let _html = `<div class="row">
                                  <div class="col-sm-12 text-center">
                                    <img src="${iconSrc}" />
                                    <h3 class="${h3Class}">${statusText}<br/>
                                       <small>${result.statuscode == -1 ? result.reason : ''}</small>
                                     </h3>
                                  </div>
                                </div>`;

                        Q.alert({
                            title: 'Transaction Status',
                            body: _html,
                            width: 600
                        });
                    }
                }
            }
        }, true);
        $(document).ready(function () {
            loadAddressDetails();
            const buynow = '@Model';
            loadPlaceOrderCart(buynow.toLowerCase() === 'true' ? true : false);
        });
        const loadAddressDetails = async function () {
            await $.post("/GetUserAddress").done(res => {
                $('#dbAddress').html(res);
            }).fail(xhr => Q.xhrError(xhr)).always(() => "");
        }
        const loadPlaceOrderCart = async function (IsBuyNow = false) {
            await $.post("/_CartPlaceOrder", { IsBuyNow: IsBuyNow }).done(res => {
                $('#dvPlaceOrderDetails').html(res);
            }).fail(xhr => Q.xhrError(xhr)).always(() => "");
        }
        $(document).on('click', '#btnPlaceOrder', (e) => {
            const url = new URL(window.location);
            const isbuynow = url.pathname.replace('/checkout/', '');

            let _parent = $(e.currentTarget).parents('#checkoutSection');
            let item = {
                AddressID: _parent.find('[name="address"]:checked').data().addressId,
                PaymentMode: _parent.find('[name="paymentMode"]:checked').data().paymentMode,
                IsBuyNow: isbuynow?.toLowerCase(),
                Remark: ""
            };
            $.post("/PlaceOrder", item).done(res => {
                if (typeof res === 'object') {
                    if (res.statusCode != 1) {
                        Q.notify(res.statusCode, res.responseText)
                    }
                    else {
                        Q.notify(res.statusCode, res.responseText)
                        setTimeout(
                            function () {
                                window.location.href ='/UserOrderHistory';
                            }, 2000);

                    }
                }
                else {
                    var myWindow = window.open("", "_blank", "toolbar=0 width=650px,height=650px");
                    myWindow.document.write(res);

                }
            }).fail(xhr => Q.xhrError(xhr)).always(() => "");
        });

        var loadStateDDL = (selector) => {
            $.post(baseURL + "/State/GetStateDDL").done(function (result) {
                console.log('State result :', result);
                if (selector) {
                    $(selector).html(`<option value=""> Select State </option>`).append(result.map(x => { return `<option value="${x.id}"> ${x.stateName} </option>` }))
                }
            }).fail(function (xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
    </script>
}

<!-- section end -->