@using Entities.Models;
@model IEnumerable<ProductVariantAttributeDetails>
<input type="hidden" id="ID" value="@Model" />

<div class="content-header clearfix">
    <h1 class="float-left">
        Variants
        <small>
            <i class="fas fa-arrow-circle-left"></i>
            <a href="/Product">back to product list</a>
        </small>
    </h1>
</div>
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-12 table-responsive">
                <table class="table table-bordered" id="Grid">
                    <thead>
                        <tr role="row">
                            <th>#</th>
                            <th>Title</th>
                            <th>Price</th>
                            <th style="width: 10%;">Selling Cost</th>
                            <th>HSN</th>
                            <th>Quantity</th>
                            <th>GTIN</th>
                            <th>Featured</th>
                            <th style="width: 12%;">Show on Home</th>
                            <th>IsPublish</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Any())
                        {
                            int counter = 0;
                            foreach (var item in Model)
                            {
                                counter++;
                                <tr>
                                    <td>@counter</td>
                                    <td>@item.Title</td>
                                    <td>@item.MRP</td>
                                    <td>@item.SellingCost</td>
                                    <td>@item.HSN</td>
                                    <td>
                                        <a href="#" class="item-quantity" data-variantid="@item.Id" data-qauntity="@item.Quantity">  <span>@item.Quantity</span></a>

                                    </td>
                                    <td>@item.GTIN</td>
                                    <td>@item.IsFeatured</td>
                                    <td>@item.IsShowOnHome</td>
                                    <td>
                                        <span class="switch switch-sm">
                                            <input type="checkbox" class="switch" onclick="UpdateIspublish('@item.Id')" id="Ispublish_@item.Id" @Html.Raw(item.IsPublished ? "checked='checked'" : "")>
                                            <label for="Ispublish_@item.Id"></label>
                                        </span>
                                    </td>
                                    <td>
                                        <a class="btn btn-sm btn-outline-primary" onclick="loadPartial('@item.Id')">Details</a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        var loadPartial = function(Id = 0) {
            ///Product/VariantAttributeList
            $.post('/Product/VariantDetail', { Id }).done((result) => {
                Q.alert({
                    title: 'Attribute List',
                    body: result,
                    width: 600
                });
            })
        };
        $('.item-quantity').click(function() {
            const vid = $(this).data('variantid');
            const prevQty = $(this).data('qauntity');
           const html=`<form method="post" asp-action="VariantQuantityUpdate"> <div class="form-row">
                            <div class="form-group col-md-6">
                              <label for="inputEmail4">Qauntity</label>
                              <input type="number" disabled class="form-control" value="${prevQty}" id="txtqauntity">
                            </div>
                            <input type="hidden" name="VariantId" value="${vid}">
                            <div class="form-group col-md-6">
                              <label for="inputPassword4">Add/Delete</label>
                              <input type="number" class="form-control" id="txtaddDelete" name="Quantity" placeholder="Add/Delete Qauntity">
                            </div>
                         </div>
                          <div class="form-group">
                            <label for="inputAddress">Remark</label>
                            <input type="text" class="form-control" id="txtRemark" placeholder="Remark">
                          </div> 
                       
                          <button type="submit"  data-variantid="${vid}" class="btn btn-outline-primary addQuantity " id="addQuantity">Add</button>
                          <button type="submit"  data-variantid="${vid}" class="btn btn-outline-danger" id="RemoveQauntity">Delete</button>
                             <form>
                          `;
             Q.alert({
                    title: 'Add/Delete Qauntity',
                    body: html,
                    width: 500
                });


            //var prevQty = $(this).data('val');
            //var vid = $(this).data('variantid');
            //var currentQty = $(this).val();
            //if (currentQty <= 0) {
            //    Q.notify(-1, 'Minimum 1 Quantity Required.');
            //    return;
            //}
            //if (currentQty != prevQty && currentQty >= 1) {
            //    $.post('/Product/VariantQuantityUpdate', { v: vid, q: currentQty }).done(function(result) {
            //        Q.notify(result.statusCode, result.responseText);
            //    }).fail(function(xhr) {
            //        console.log(xhr.responseText);
            //        alert('something went wrong');
            //    })
            //}
        });
        
        var UpdateIspublish = function(Id) {
            let IsPublish = false;
            if ($('#Ispublish_' + Id).is(":checked")) {
                IsPublish = true;
            }
            let obj = {
                Id: Id,
                IsPublish: IsPublish
            }
            $.post('/Product/UpdateIsPublishVariant', obj).done(function(result) {
                console.log(result);
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    loadData();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AddNewAttribute = function(Id) {
            let combinationId = '';
            $.post('/Product/AddAttributes', { combinationId, CategoryId: Id }).done((result) => {
                Q.alert({
                    title: 'Add Attribute',
                    body: result,
                    width: 900
                });
            })
        }
        var DeleteImage = function(VarId, ImgId, Path) {
            Q.confirm("Are You Sure. You Want To Delete This Image", () => deletevariantImg(VarId, ImgId, Path));
        }
        var deletevariantImg = function(VarId, ImgId, Path) {
            $.post('/Product/DeleteVariantImage', { VariantId: VarId, ImgId: ImgId, ImgPath: Path }).done((result) => {
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    window.location.reload();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AddNewimage = function(VarId, color, Alt) {
            $.post('/Product/UploadVariantImage', { VariantId: VarId, VariantColor: color, ImgAlt: Alt }).done((result) => {
                Q.alert({
                    title: 'Upload Variant Image',
                    body: result,
                    width: 900
                });
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
    </script>
}
