@using Entities.Enums
@using Entities.Models;
<input type="hidden" id="ID" value="@Model" />
@model AttrinutesViewModel
<style>

    .input-group-append label.form-control{
        margin-bottom: 0;
        display: flex;
        align-items: center;
        padding: 0.375rem 0.35rem;
    }


    .input-group label.form-control{
        padding: 0.375rem 0.35rem;
        text-align: center;
    }

    .item-quantity i{
            padding-right: 0px;
    }
</style>

<div class="content-header clearfix">
    <h1 class="float-left">
        Variants
        <small>
            <i class="fas fa-arrow-circle-left"></i>
            <a href="/Product">back to product list</a>
        </small>
    </h1>
</div>
<div class="card">
    <div class="card-body">
        <div class="row justify-content-end mb-3">
            <div class="col-md-3">
                <input type="hidden" id="hdnid" value="@Model.Id" />
                <select class="form-control" id="ddlstatus" asp-for="@Model.statusid" onchange="loaddata()">
                    <option value="">-- Select Status --</option>
                    <option value="1">Pending</option>
                    <option value="@StatusType.Confirmed">@StatusType.Confirmed</option>
                    <option value="@StatusType.Rejected">@StatusType.Rejected</option>
                </select>
            </div>
        </div>
        <div class="row">

            <div class="col-md-12 table-responsive">
                <table class="table table-bordered" id="Grid">
                    <thead  class="text-nowrap">
                        <tr role="row">
                            <th>#</th>
                            <th>Action</th>
                            <th>Image</th>
                            <th>Title</th>
                            <th>Price</th>
                            <th style="width: 10%;">Selling Cost</th>
                            <th>HSN</th>
                            <th style="width: 10%;">Quantity</th>
                            <th>GTIN</th>
                            <th>Featured</th>
                            <th style="width: 8%;">Show on Home</th>
                            <th>IsPublish</th>
                            <th>Admin Approvel</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(document).ready(function() {
            loaddata();
        });
        var loaddata = () => {
            $.post('/Product/GetAttributes', { Id: $('#hdnid').val(), s: $('#ddlstatus').val() }).done((result) => {
                $('#Grid tbody').html(result);
            }).fail(function() {
                console.log(xhr.responseText);
                Q.notify(-1, 'something went wrong.');
            });
        }
        //var loadPartial = function(Id = 0) {
        //    ///Product/VariantAttributeList
        //    $.post('/Product/VariantDetail', { Id }).done((result) => {
        //        //Q.alert({
        //        //    title: 'Attribute List',
        //        //    body: result,
        //        //    width: 600
        //        //});
        //    })
        //};

        $(document).on('click', '.addQuantity', (e) => {
            const remark = $('#txtRemark').val();
            const vId = $(e.currentTarget).data()?.variantid ?? 0;
            const am = $(e.currentTarget).data()?.addminus ?? 0;
            const currentQty = $('#txtaddDelete').val();
            if (currentQty == '') {
                Q.notify(-1, 'Minimum 1 Quantity Required.!');
                $('#txtaddDelete').focus();
                return;
            }
            if (am == 1 && remark == '') {
                Q.notify(-1, 'Remark Required.!');
                $('#txtRemark').focus();
                return;
            }
            $.post('/Product/VariantQuantityUpdate', { v: vId, q: currentQty, IsReduce: am == 0 ? false : true, Remark: remark }).done(function(result) {
                Q.notify(result.statusCode, result.responseText);
                (result.statusCode == 1)
                {
                    // loadData();
                    location.reload();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                Q.notify(-1, 'something went wrong.');
            })
        });

        var UpdateIspublish = function(Id) {
            let IsPublish = false;
            if ($('#Ispublish_' + Id).is(":checked")) {
                IsPublish = true;
            }
            let obj = {
                Id: Id,
                IsPublish: IsPublish
            }
            $.post('/Product/UpdateIsPublishVariant', obj).done(function(result) {
                console.log(result);
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    loaddata();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AddNewAttribute = function(Id) {
            let combinationId = '';
            $.post('/Product/AddAttributes', { combinationId, CategoryId: Id }).done((result) => {
                Q.alert({
                    title: 'Add Attribute',
                    body: result,
                    width: 900
                });
            })
        }
        var DeleteImage = function(VarId, ImgId, Path) {
            Q.confirm("Are You Sure. You Want To Delete This Image", () => deletevariantImg(VarId, ImgId, Path));
        }
        var deletevariantImg = function(VarId, ImgId, Path) {
            $.post('/Product/DeleteVariantImage', { VariantId: VarId, ImgId: ImgId, ImgPath: Path }).done((result) => {
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    window.location.reload();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AddNewimage = function(VarId, color, Alt) {
            $.post('/Product/UploadVariantImage', { VariantId: VarId, VariantColor: color, ImgAlt: Alt }).done((result) => {
                Q.alert({
                    title: 'Upload Variant Image',
                    body: result,
                    width: 900
                });
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AdminApprovelChangeStatus = (id, statusid) => {
            debugger
            let remark = '';
            if (statusid == 'Rejected') {
                const html = `<div class="form-group">
                  <label for="inputAddress">Reason</label>
                  <textarea  id="txtRemark" class="form-control" rows="2"></textarea>
                  <small class="text-danger d-none" id="txtRemarksm">Remark is required</small>
                  </div>
                  <button type="submit"  data-id="${id}" data-status="${statusid}" class="btn btn-outline-primary addQuantity " id="btnSubmitRemark">Reject</button>
                                                                                           `;
                Q.alert({
                    title: 'Add Reason',
                    body: html,
                    width: 500
                });
                $('#btnSubmitRemark').click(() => {
                    remark = $('#txtRemark').val();
                    if (remark == '') {
                        $('#txtRemarksm').removeClass('d-none');
                        return false;
                    }
                    else {
                        $('#txtRemarksm').addClass('d-none');
                    }
                    $.post('/Product/UpdateAdminApprovelStatus', { Id: id, StatusID: statusid, Remark: remark }).done((result) => {
                        Q.notify(result.statusCode, result.responseText);
                        setTimeout(window.location.reload(), 4000)
                    }).fail(function(xhr) {
                        console.log(xhr.responseText);
                        alert('something went wrong');
                    })
                });
            }
            else {
                $.post('/Product/UpdateAdminApprovelStatus', { Id: id, StatusID: statusid, Remark: remark }).done((result) => {
                    Q.notify(result.statusCode, result.responseText);
                    setTimeout(window.location.reload(), 4000)
                }).fail(function(xhr) {
                    console.log(xhr.responseText);
                    alert('something went wrong');
                })
            }
        }
                        //var FilterData = () => {
                        //    if($('#ddlstatus').val() == ''){
                        //        window.location.href = '/Product/Attributes';
                        //    }
                        //    else{
                        //        window.location.href = '/Product/Attributes?s=' + $('#ddlstatus').val();
                        //    }
                        //}
    </script>
}
