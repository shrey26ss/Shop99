@using WebApp.Models.ViewModels;
@model VariantViewModel
@{
    var attrDDl = new SelectList(Model.AttributesDDLs, "Id", "Name");
    string s = string.Empty;
}
<style>
    .custOne {
        height: 0px;
        overflow: hidden;
    }

    .custTwo {
        width: 0px;
        padding-top: 0px;
        padding-bottom: 0px;
        border-top-width: 0px;
        border-bottom-width: 0px;
        height: 0px
    }
</style>
<div class="content-header clearfix">
    <h1 class="float-left">
        Edit product details - Build your own computer
        <small>
            <i class="fas fa-arrow-circle-left"></i>
            <a href="/Admin/Product/List">back to product list</a>
        </small>
    </h1>
    <div class="float-right">
        <input type="button" value="Save" class="btn btn-primary" id="SaveProduct" />
        <button type="submit" id="btnNewAttrGroup" name="new-attr-group" class="btn btn-primary">
            <i class="far fa-save"></i>
            Add Attribute Group
        </button>
        <button type="button" name="copyproduct" class="btn bg-olive" data-toggle="modal" data-target="#copyproduct-window">
            <i class="far fa-clone"></i>
            Copy product
        </button>
        <span id="product-delete" class="btn btn-danger" data-toggle="modal" data-target="#productmodel-Delete-delete-confirmation">
            <i class="far fa-trash-alt"></i>
            Delete
        </span>
    </div>
</div>
<div class="validation-summary-valid" data-valmsg-summary="true">
    <ul>
        <li style="display:none"></li>
    </ul>
</div>
<input type="hidden" data-val="true" data-val-required="The Id field is required." id="Id" name="Id" value="1">
<div class="row text-center">
    <div class="col-10">
        <span id="GroupinfoErr" class="d-none"></span>
    </div>
</div>
<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <input type="hidden" id="ProductId" asp-for="ProductId" />
            <div id="AttributeView">
                <div class="card card-secondary card-outline" data-card-name="product-info" id="product-info">
                    <div class="card-header with-border clearfix">
                        <div class="card-title">
                            <i class="fas fa-info"></i>Attribute Combination
                        </div>
                    </div>
                    <div class="card-body">
                        <attrGroup>
                            <div class="row">
                                <h4 class="col-sm-12">
                                    Combination-1
                                    <button class="btn btn-primary float-right btnCloneAttrGroup">Clone Group</button>
                                    <hr />
                                </h4>
                                @Html.Partial("Partials/_AddAttributeGroup")
                            </div>
                        </attrGroup>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <input type="hidden" id="ProductId" asp-for="ProductId" />
            <div id="AttributeView">
                <div class="card card-secondary card-outline" data-card-name="product-info" id="product-info">
                    <div class="card-header with-border clearfix">
                        <div class="card-title">
                            <i class="fas fa-info"></i>Pictures
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @Html.Partial("Partials/_AddPictures")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts{

    <script>

        variantImages = [];
        $(document).on('click', '.btnAddNewAttribute', e => {
            let combinationId = $(e.currentTarget).parents('.attrCombination').attr('id')
            $.post('/Product/AddAttributes', { combinationId }).done((result) => {
                Q.alert({
                    title: 'Add Attribute',
                    body: result,
                    width: 900
                });
            })
        })

        $(document).on('click', '#SaveProduct', () => {
            let groupInfo = [];
            let attrInfo = [];
            let pictureInfo = [];
            let valCount = 0;
            $('.attrCombination').each(function (i) {
                let groupId = i + 1;
                let currentGroup = $(this);
                //let attrInfo = [];
                let attributes = currentGroup.find('.attributeGrid tr').each(function (j) {
                    let cAttr = $(this).data();
                    let cAttrs = $(this).closest('.attributeGrid');
                    if (!$.isEmptyObject(cAttr)) {
                        let attributes = {
                            Id: j,
                            AttributeId: cAttr.attrId,
                            AttributeValue: cAttr.attrValue,
                            AllowFiltering: cAttr.filterAllowed == "checked" ? true : false,
                            GroupId: groupId
                        };
                        attrInfo.push(attributes);
                    }
                    if (groupInfo.length <= 0) {
                        $(`<small class="text-danger">Please add at least one attribute</small>`).insertBefore(cAttrs);
                        valCount++;
                    }
                });
                let groupDetail = {
                    Id: groupId,
                    HSN: currentGroup.find('[name="HSN"]').val(),
                    MRP: currentGroup.find('[name="MRP"]').val(),
                    Quantity: currentGroup.find('[name="Quantity"]').val(),
                    GTIN: currentGroup.find('[name="GTIN"]').val(),
                    Title: currentGroup.find('[name="Title"]').val(),
                    SellingCost: currentGroup.find('[name="SellingCost"]').val(),
                    IsFeatured: currentGroup.find('[name="IsFeatured"]').is(':checked'),
                    IsShowOnHome: currentGroup.find('[name="IsShowOnHome"]').is(':checked') ? 1 : 0,
                };
                groupInfo.push(groupDetail);

            });
            console.log(valCount);
            if (valCount >= 0) {                
                return false;
            }
            //return false;
            $('.pictureGrid tbody tr').each(function (i) {
                let pictureGroup = $(this).data();
                let pic = {
                    Alt: pictureGroup.altValue,
                    Title: pictureGroup.titleValue,
                    DisplayOrder: pictureGroup.displayValue,
                    AttrColor: pictureGroup.colorValue
                }
                pictureInfo.push(pic);
            });
            let param = {
                ProductId: parseInt($('#ProductId').val()),
                AttributeInfo: attrInfo,
                GroupInfo: groupInfo,
                PictureInfo: pictureInfo
            };
            formData = new FormData();
            for (let i = 0; i < variantImages.length; i++) {
                formData.append(`req[${i}].file`, variantImages[i].File);
                formData.append(`req[${i}].Color`, variantImages[i].AttrColor);
                formData.append(`req[${i}].GroupId`, variantImages[i].GroupId);
                formData.append(`req[${i}].DisplayOrder`, variantImages[i].DisplayOrder);
                formData.append(`req[${i}].Title`, variantImages[i].Title);
                formData.append(`req[${i}].Alt`, variantImages[i].Alt);
            }
            formData.append('jsonObj', JSON.stringify(param));

            $.ajax({
                url: '/Product/SaveVariants',
                data: formData,
                processData: false,
                contentType: false,
                type: 'POST',
                success: function (response) {
                    Q.notify(1, response.msg)
                },
                error: function (xhr) {
                    Q.notify(-1, xhr.responseText)
                },
            });
        })

        $('#btnNewAttrGroup').click(function () {
            $.get("/Product/AddAttributeGroup").done(result => {
                let _count = $('.attrCombination').length;
                $('attrGroup')
                    .append(`<div class="row"><h4 class="col-sm-12">Combination-${_count + 1}<button class="btn btn-primary btnCloneAttrGroup float-right">Clone Group</button><span class="float-right text-danger fa fa-times rmComb"></span>  <hr /></h4>${result}</div>`);

            }).fail(xhr => console.log(xhr.responseText));
        });

        $(document).on('click', '.rmComb', e => $(e.currentTarget).parents('div.row').remove());
        $(document).on('click', '.rmRow', e => $(e.currentTarget).closest('tr').remove());
        $(document).on('click', '.btnCloneAttrGroup', e => {
            let __html = $(e.currentTarget).parents('.row').find('.attrCombination').html();
            let _count = $('.attrCombination').length;
            $('attrGroup')
                .append(`<div class="row"><h4 class="col-sm-12">Combination-${_count + 1}<button class="btn btn-primary btnCloneAttrGroup float-right">Clone Group</button><span class="float-right text-danger fa fa-times rmComb"></span>  <hr /></h4><div class="col-md-12 attrCombination" id="clone_${_count}">${__html}</div></div>`);
        });

        $(document).on('click', '#AddProductImg', () => {
            let param = {
                File: $('#PictureFile')[0].files[0],
                Alt: $('#Alt').val(),
                Title: $('#Title').val(),
                DisplayOrder: $('#DisplayOrder').val(),
                AttrColor: $("#attrColor option:selected").text(),
                GroupId: $("#attrColor option:selected").data()?.groupId
            };
            let pictureGrid = $(`.pictureGrid`);
            let count = pictureGrid.find('tr').length;
            variantImages.push(param);
            let _src = URL.createObjectURL(param.File);
            let _html = `<tr data-alt-value="${param.Alt}" data-title-value="${param.Title}" data-display-value="${param.DisplayOrder}" data-color-value="${param.AttrColor}">
                                                   <td>${count}</td>
                                                   <td><img src="${_src}" alt="image" style="width:100px"/></td>
                                                   <td>${param.DisplayOrder}</td>
                                                   <td>${param.Alt}</td>
                                                   <td>${param.Title}</td>
                                                   <td><span class="btn btn-danger rmImage" ><i class="fa fa-times"> </i><span></td>
                                                </tr>`;
            pictureGrid.append(_html);
            $('.rmImage').unbind().click(e => {
                let _ele = $(e.currentTarget).closest('tr');
                let __index = _ele.index();
                variantImages.splice(__index, 1);
                _ele.remove();
            });
        });
    </script>
 }