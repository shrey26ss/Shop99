@model WebApp.Models.ViewModels.VariantDetailVM
<div class="content-header clearfix">
    <h1 class="float-left">
        Variant details
        <small>
            <i class="fas fa-arrow-circle-left"></i>
            <a href="/Product/Attributes?s=0">back to variant list</a>
        </small>
    </h1>
</div>
<div class="validation-summary-valid" data-valmsg-summary="true">
    <ul>
        <li style="display:none"></li>
    </ul>
</div>
<div class="row text-center">
    <div class="col-10">
        <span id="GroupinfoErr" class="d-none"></span>
    </div>
</div>
<div class="form-horizontal">
    <div class="card">
        <div class="card-header with-border clearfix">
            <div class="card-title">
                <i class="fas fa-info"></i>Variant details
            </div>
            <div class="card-tools float-right">
                <button class="btn btn-tool" data-card-widget="collapse" type="button">
                    <i class="fa toggle-icon fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>Title</label>
                        <input name="" class="form-control" value="@Model.variantDetailsByAttributes.Title" />
                    </div>
                    <div class="form-group">
                        <label>Price</label>
                        <input name="" class="form-control" value="@Model.variantDetailsByAttributes.MRP" />
                    </div>
                    <div class="form-group">
                        <label>Selling Cost</label>
                        <input name="" class="form-control" value="@Model.variantDetailsByAttributes.SellingCost" />
                    </div>
                    <div class="form-group">
                        <label>HSN</label>
                        <input name="" class="form-control" value="@Model.variantDetailsByAttributes.HSN" />
                    </div>
                    <div class="form-group">
                        <label>Quantity</label>
                        <input name="" class="form-control" value="@Model.variantDetailsByAttributes.Quantity" />
                    </div>
                    <div class="form-group">
                        <label>GTIN</label>
                        <input name="" class="form-control" value="@Model.variantDetailsByAttributes.GTIN" />
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-4 input-group">
                                <div class="input-group-prepend" style="height: 38px;">
                                    <div class="input-group-text">
                                        <input type="checkbox" name="IsFeatured" id="IsFeatured_@Model.variantDetailsByAttributes.Id" class="mt-0" @Html.Raw(Model.variantDetailsByAttributes.IsFeatured ? "checked='checked'" : "")>
                                    </div>
                                </div>
                                <label class="form-control" for="IsFeatured_@Model.variantDetailsByAttributes.Id">IsFeatured</label>
                            </div>

                            <div class="col-sm-4 input-group">
                                <div class="input-group-prepend" style="height: 38px;">
                                    <div class="input-group-text">
                                        <input type="checkbox" name="IsFeatured" id="IsShowOnHome_@Model.variantDetailsByAttributes.Id" class="mt-0" @Html.Raw(Model.variantDetailsByAttributes.IsShowOnHome ? "checked='checked'" : "")>
                                    </div>
                                </div>
                                <label class="form-control" for="IsShowOnHome_@Model.variantDetailsByAttributes.Id">IsShowOnHome</label>
                            </div>

                            <div class="col-sm-4 input-group">
                                <div class="input-group-prepend" style="height: 38px;">
                                    <div class="input-group-text">
                                        <input type="checkbox" name="IsFeatured" id="IsPublished_@Model.variantDetailsByAttributes.Id" class="mt-0" @Html.Raw(Model.variantDetailsByAttributes.IsPublished ? "checked='checked'" : "")>
                                    </div>
                                </div>
                                <label class="form-control" for="IsPublished_@Model.variantDetailsByAttributes.Id">IsPublished</label>
                            </div>
                        </div>
                    </div>
                    @*<button type="button" class="btn btn-sm btn-info btnAddNewAttribute mb-2 float-right" onclick="AddNewAttribute('@Model.variantDetailsByAttributes.Id')">Add Attribute</button>*@
                    @{
                        string color = "";
                        try
                        {
                            color = Model.PictureInformation.ToList().FirstOrDefault().Color;
                        }
                        catch (Exception ex)
                        {

                        }
                    }
                    <div class="form-group">
                        <table class="table table-bordered" id="Grid">
                            <thead>
                                <tr role="row">
                                    <th>#</th>
                                    <th>Attribute Name</th>
                                    <th>Attribute Value</th>
                                    @*<th>Action</th>*@
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Attributes.Any())
                                {
                                    int counter = 0;
                                    foreach (var item in Model.Attributes)
                                    {
                                        counter++;
                                        <tr>
                                            <td>@counter</td>
                                            <td>@item.AttributeName</td>
                                            <td>@item.AttributeValue</td>
                                            @*<td><span class="btn btn-danger rmImage" onclick="DeleteImage('@Model.variantDetailsByAttributes.Id')"><i class="fa fa-times"> </i><span></span></span></td>*@
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <button type="button" class="btn btn-sm btn-info btnAddNewImage mb-2 float-right" onclick="AddNewimage('@Model.variantDetailsByAttributes.Id','@color','@Model.variantDetailsByAttributes.Title')">Upload Image</button>
                    <div class="form-group">
                        <table class="table table-bordered" id="Grid">
                            <thead>
                                <tr role="row">
                                    <th>#</th>
                                    <th>Picture</th>
                                    <th>Display Order</th>
                                    <th>Alt</th>
                                    <th>Title</th>
                                    <th>Color</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.PictureInformation.Any())
                                {
                                    int counter = 0;
                                    foreach (var item in Model.PictureInformation)
                                    {
                                        counter++;
                                        <tr>
                                            <td>@counter</td>
                                            <td><img src="@item.ImagePath" alt="@item.Alt" class="img-fluid" /></td>
                                            <td>@item.DisplayOrder</td>
                                            <td>@item.Alt</td>
                                            <td>@item.Title</td>
                                            <td>@item.Color</td>
                                            <td><span class="btn btn-danger rmImage" onclick="DeleteImage('@Model.variantDetailsByAttributes.Id','@item.Id','@item.ImagePath')"><i class="fa fa-times"> </i><span></span></span></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(document).on('click', '.addQuantity', (e) => {
            const remark = $('#txtRemark').val();
            const vId = $(e.currentTarget).data()?.variantid ?? 0;
            const am = $(e.currentTarget).data()?.addminus ?? 0;
            const currentQty = $('#txtaddDelete').val();
            if (currentQty == '') {
                Q.notify(-1, 'Minimum 1 Quantity Required.!');
                $('#txtaddDelete').focus();
                return;
            }
            if (am == 1 && remark == '') {
                Q.notify(-1, 'Remark Required.!');
                $('#txtRemark').focus();
                return;
            }
            $.post('/Product/VariantQuantityUpdate', { v: vId, q: currentQty, IsReduce: am == 0 ? false : true, Remark: remark }).done(function(result) {
                Q.notify(result.statusCode, result.responseText);
                (result.statusCode == 1)
                {
                    // loadData();
                    location.reload();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                Q.notify(-1, 'something went wrong.');
            })
        });

        var UpdateIspublish = function(Id) {
            let IsPublish = false;
            if ($('#Ispublish_' + Id).is(":checked")) {
                IsPublish = true;
            }
            let obj = {
                Id: Id,
                IsPublish: IsPublish
            }
            $.post('/Product/UpdateIsPublishVariant', obj).done(function(result) {
                console.log(result);
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    loaddata();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AddNewAttribute = function(Id) {
            let combinationId = '';
            $.post('/Product/AddAttributes', { combinationId, CategoryId: Id }).done((result) => {
                Q.alert({
                    title: 'Add Attribute',
                    body: result,
                    width: 900
                });
            })
        }
        var DeleteImage = function(VarId, ImgId, Path) {
            Q.confirm("Are You Sure. You Want To Delete This Image", () => deletevariantImg(VarId, ImgId, Path));
        }
        var deletevariantImg = function(VarId, ImgId, Path) {
            $.post('/Product/DeleteVariantImage', { VariantId: VarId, ImgId: ImgId, ImgPath: Path }).done((result) => {
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    window.location.reload();
                }
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AddNewimage = function(VarId, color, Alt) {
            $.post('/Product/UploadVariantImage', { VariantId: VarId, VariantColor: color, ImgAlt: Alt }).done((result) => {
                Q.alert({
                    title: 'Upload Variant Image',
                    body: result,
                    width: 900
                });
            }).fail(function(xhr) {
                console.log(xhr.responseText);
                alert('something went wrong');
            })
        }
        var AdminApprovelChangeStatus = (id, statusid) => {
            debugger
            let remark = '';
            if (statusid == 'Rejected') {
                const html = `<div class="form-group">
                                                                                                   <label for="inputAddress">Reason</label>
                                                                                                   <textarea  id="txtRemark" class="form-control" rows="2"></textarea>
                                                                                                   <small class="text-danger d-none" id="txtRemarksm">Remark is required</small>
                                                                                                   </div>
                                                                                                   <button type="submit"  data-id="${id}" data-status="${statusid}" class="btn btn-outline-primary addQuantity " id="btnSubmitRemark">Reject</button>
                                                                                                   `;
                Q.alert({
                    title: 'Add Reason',
                    body: html,
                    width: 500
                });
                $('#btnSubmitRemark').click(() => {
                    remark = $('#txtRemark').val();
                    if (remark == '') {
                        $('#txtRemarksm').removeClass('d-none');
                        return false;
                    }
                    else {
                        $('#txtRemarksm').addClass('d-none');
                    }
                    $.post('/Product/UpdateAdminApprovelStatus', { Id: id, StatusID: statusid, Remark: remark }).done((result) => {
                        Q.notify(result.statusCode, result.responseText);
                        setTimeout(window.location.reload(), 4000)
                    }).fail(function(xhr) {
                        console.log(xhr.responseText);
                        alert('something went wrong');
                    })
                });
            }
            else {
                $.post('/Product/UpdateAdminApprovelStatus', { Id: id, StatusID: statusid, Remark: remark }).done((result) => {
                    Q.notify(result.statusCode, result.responseText);
                    setTimeout(window.location.reload(), 4000)
                }).fail(function(xhr) {
                    console.log(xhr.responseText);
                    alert('something went wrong');
                })
            }
        }
                                //var FilterData = () => {
                                //    if($('#ddlstatus').val() == ''){
                                //        window.location.href = '/Product/Attributes';
                                //    }
                                //    else{
                                //        window.location.href = '/Product/Attributes?s=' + $('#ddlstatus').val();
                                //    }
                                //}
    </script>
}