@if (User.IsInRole("ADMIN"))
{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
else
{
    Layout = "~/Views/Shared/_VendorsLayout.cshtml";
}
@using WebApp.Models.ViewModels;
@model ProductViewModel
@{
    var catDDl = new SelectList(Model.Categories, "CategoryId", "CategoryName");
}
<div class="content-header clearfix">
    <h1 class="float-left" style="margin-top: 6px;">
        Products
    </h1>
    @if (User.IsInRole("ADMIN"))
    {
        <div class="float-right">
            <a class="btn btn-primary" href="/Product/Edit/0">
                <i class="fas fa-plus-square"></i>
                Add Product
            </a>
        </div>
    }
</div>
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <div class="form-row mb-2">
                    <div class="col">
                        <select id="ddlCategory" class="form-control select2" asp-items="@catDDl">
                            <option value="0">Select Category</option>
                        </select>
                    </div>
                    <div class="col">
                        <div class="input-group" role="group" aria-label="Basic example">
                            <input type="text" id="textProductName" class="form-control" placeholder="Product Name">
                            <div class="input-group-append">
                                <div class="input-group-text btn btn-outline-primary" id="btnSearch">
                                    <i class="fa fa-search"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl" class="table table-bordered tblbtn m-0 w-100">
                        <thead class="table-dark p-0">


                            <tr>
                                <th></th>
                                <th>Action</th>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Brand</th>
                                <th>SKU</th>
                                @if (User.IsInRole("ADMIN"))
                                {
                                    <th>IsPublished</th>
                                }
                            </tr>

                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                    <div class="endTable"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $('#ddlCategory').select2({
            selectOnClose: true
        });

        $(() => {
            loadData(true);
        })
        $('#btnSearch').click(function () {
            loadData(true);
        });

        var UpdateIspublish = function (Id) {
            let IsPublish = false;
            if ($('#Ispublish_' + Id).is(":checked")) {
                IsPublish = true;
            }
            let obj = {
                Id: Id,
                IsPublish: IsPublish
            }
            $.post('/Product/UpdateIsPublishProduct', obj).done(function (result) {
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    loadData(true);
                }
            }).fail(function (xhr) {
                console.log(xhr.responseText);
                Q.notify(-1, xhrTest[xhr.status]);
            })
        }

        var loadData = function (customeEvent = false) {
            let isAdmin = '@User.IsInRole("ADMIN")';
            console.log('isAdmin : ', isAdmin)
            let counter = 0;
            let column = [
                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    },
                    orderable: false
                },
                {
                    data: function (row) {
                        counter = counter + 1;
                        return `<td class="align-middle">
                                    <div class="btn-group dropup">
                                        <a href="#" id="act_${counter}" class="btn btn-outline-dark btn-block dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expaned="false"></a>
                                        <div class="dropdown-menu" aria-labelledby="act">
                                            <h6 class="dropdown-header">Action Menu</h6>
                                            <a class="dropdown-item Edit" href="/Product/AddVariant?Id=${row.id}&cId=${row.categoryId}">Add Variant </a>
                                            <a class="dropdown-item Edit" href="/Product/Attributes?Id=${row.id}">View Variant </a>
                                         </div>
                                      </div>
                                 </td>`;
                    },
                    orderable: false, class: 'text-nowrap align-middle'
                },
                { data: "name", orderable: false, class: '' },
                { data: "categoryName", orderable: false, class: 'text-nowrap' },
                { data: "brandName", orderable: false, class: 'text-nowrap' },
                { data: "sku", orderable: false, class: '' }
            ]
            if (isAdmin === 'True') {
                column = [
                    {
                        data: 'id',
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        },
                        orderable: false
                    },
                    {
                        data: function (row) {
                            counter = counter + 1;
                            return `<td class="align-middle">
                                       <div class="btn-group dropup">
                                          <a href = "#" id="act_${counter}" class="btn btn-outline-dark btn-block dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expaned="false"></a>
                                          <div class="dropdown-menu" aria-labelledby="act">
                                            <h6 class="dropdown-header">Action Menu</h6>
                                                <a class="dropdown-item Edit" href="/Product/Edit/${row.id}">Edit</a>
                                            <a class="dropdown-item Edit" href="/Product/AddVariant?Id=${row.id}&cId=${row.categoryId}">Add Variant</a>
                                            <a class="dropdown-item Edit" href="/Product/Attributes?Id=${row.id}">View Variant</a>
                                         </div>
                                      </div>
                            </td>`;
                        },
                        orderable: false, class: 'text-nowrap align-middle'
                    },
                    { data: "name", orderable: false, class: '' },
                    { data: "categoryName", orderable: false, class: 'text-nowrap' },
                    { data: "brandName", orderable: false, class: 'text-nowrap' },
                    { data: "sku", orderable: false, class: '' },
                    {
                        data: function (row) {
                            let isChecked = row.isPublished ? "checked" : "";
                            return `<span class= "switch switch-sm">
                                        <input type = "checkbox" class= "switch" onclick = "UpdateIspublish('${row.id}')" id = "Ispublish_${row.id}" ${isChecked}>
                                        <label for= "Ispublish_${row.id}" ></label>
                            </span >`;
                        },
                        orderable: false, class: 'text-nowrap'
                    }
                ]
            }

            var table = $.renderDataTable2({
                columns: column,
                filters: {
                    SearchVal: $('#textProductName').val(),
                    cid: $('#ddlCategory').val()
                },
                apiUrl: '/Product/ProductList',
                searching: false,
                customeEvent: customeEvent,
                buttons: [],
                responsive: true,
                scrollY: window.innerHeight - $('.table').offset().top - 100,
                scrollX: true,
                pageLength: 50,
                afterDrawback: function () {
                    const ps = document.querySelectorAll('p');
                    const observer = new ResizeObserver(entries => {
                        for (let entry of entries) {
                            entry.target.classList[entry.target.scrollHeight > entry.contentRect.height ? 'add' : 'remove']('truncated');
                        }
                    });
                    ps.forEach(p => {
                        observer.observe(p);
                    });
                }
            });
        };
    </script>
}
