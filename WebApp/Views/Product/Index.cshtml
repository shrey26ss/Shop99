@using WebApp.Models.ViewModels;
@model ProductViewModel
@{
    var catDDl = new SelectList(Model.Categories, "CategoryId", "CategoryName");
}
<div class="content-header clearfix">
    <h1 class="float-left">
        Products
    </h1>
    <div class="float-right">
        <a class="btn btn-primary" href="/Product/Edit/0">
            <i class="fas fa-plus-square"></i>
            Add Product
        </a>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <div class="form-row mb-2">
                    <div class="col">
                        <select id="ddlCategory" class="form-control select2" asp-items="@catDDl">
                            <option value="0">Select Category</option>
                        </select>
                    </div>
                    <div class="col">
                        <div class="input-group" role="group" aria-label="Basic example">
                            <input type="text" id="textProductName" class="form-control" placeholder="Product Name">
                            <div class="input-group-append">
                                <div class="input-group-text btn btn-outline-primary" id="btnSearch">
                                    <i class="fa fa-search"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl" class="table table-bordered tblbtn">
                        <thead class="table-dark p-0">
                            <tr>
                                <th>#</th>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Brand</th>
                                <th>SKU</th>
                                <th>IsPublished</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                    <div class="endTable"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $('#ddlCategory').select2({
            selectOnClose: true
        });

        $(() => {
            loadData(true);
        })
        $('#btnSearch').click(function () {
            loadData($('#ddlCategory').val(), $('#textProductName').val());
        });

        var UpdateIspublish = function (Id) {
            let IsPublish = false;
            if ($('#Ispublish_' + Id).is(":checked")) {
                IsPublish = true;
            }
            let obj = {
                Id: Id,
                IsPublish: IsPublish
            }
            $.post('/Product/UpdateIsPublishProduct', obj).done(function (result) {
                Q.notify(result.statusCode, result.responseText);
                if (result.statusCode == 1) {
                    loadData();
                }
            }).fail(function (xhr) {
                console.log(xhr.responseText);
                Q.notify(-1, xhrTest[xhr.status]);
            })
        }

        var loadData = function (customeEvent = false) {
            var table = $.renderDataTable2({
                columns: [
                    {
                        data: 'id',
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        },
                        orderable: false
                    },
                    { data: "name", orderable: false, class: 'text-nowrap' },
                    { data: "categoryName", orderable: false, class: 'text-nowrap' },
                    { data: "brandName", orderable: false, class: 'text-nowrap' },
                    { data: "sku", orderable: false, class: 'text-nowrap' },
                    { data: "isPublished", orderable: false, class: 'text-nowrap' }
                ],
                filters: {
                    SearchVal: $('#textProductName').val()
                },
                apiUrl: '/Product/ProductList',
                searching: false,
                customeEvent: customeEvent,
                buttons: [],
                responsive: true,
                scrollY: window.innerHeight - $('.table').offset().top - 100,
                scrollX: true,
                afterDrawback: function () {
                    const ps = document.querySelectorAll('p');
                    const observer = new ResizeObserver(entries => {
                        for (let entry of entries) {
                            entry.target.classList[entry.target.scrollHeight > entry.contentRect.height ? 'add' : 'remove']('truncated');
                        }
                    });
                    ps.forEach(p => {
                        observer.observe(p);
                    });
                }
            });
        };
    </script>
}
